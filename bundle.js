(()=>{"use strict";var t={56:(t,e,i)=>{t.exports=function(t){var e=i.nc;e&&t.setAttribute("nonce",e)}},72:t=>{var e=[];function i(t){for(var i=-1,s=0;s<e.length;s++)if(e[s].identifier===t){i=s;break}return i}function s(t,s){for(var n={},a=[],h=0;h<t.length;h++){var r=t[h],l=s.base?r[0]+s.base:r[0],d=n[l]||0,c="".concat(l," ").concat(d);n[l]=d+1;var p=i(c),g={css:r[1],media:r[2],sourceMap:r[3],supports:r[4],layer:r[5]};if(-1!==p)e[p].references++,e[p].updater(g);else{var u=o(g,s);s.byIndex=h,e.splice(h,0,{identifier:c,updater:u,references:1})}a.push(c)}return a}function o(t,e){var i=e.domAPI(e);return i.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;i.update(t=e)}else i.remove()}}t.exports=function(t,o){var n=s(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<n.length;a++){var h=i(n[a]);e[h].references--}for(var r=s(t,o),l=0;l<n.length;l++){var d=i(n[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}n=r}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var i="",s=void 0!==e[5];return e[4]&&(i+="@supports (".concat(e[4],") {")),e[2]&&(i+="@media ".concat(e[2]," {")),s&&(i+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),i+=t(e),s&&(i+="}"),e[2]&&(i+="}"),e[4]&&(i+="}"),i})).join("")},e.i=function(t,i,s,o,n){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(s)for(var h=0;h<this.length;h++){var r=this[h][0];null!=r&&(a[r]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);s&&a[d[0]]||(void 0!==n&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=n),i&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=i):d[2]=i),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},365:(t,e,i)=>{i.d(e,{A:()=>h});var s=i(601),o=i.n(s),n=i(314),a=i.n(n)()(o());a.push([t.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    padding: 20px;\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    border: 1px solid #ccc;\n    padding: 20px;\n    background-color: white;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n#aquarium-canvas {\n    border: 2px solid #333;\n    background-color: #e0f7ff;\n    width: 1000px;\n    height: 700px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    display: block;\n}\n\n.controls {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    padding: 10px;\n    background-color: #f5f5f5;\n    border-radius: 4px;\n}\n\nbutton {\n    padding: 8px 16px;\n    background-color: #4a90e2;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 14px;\n    transition: background-color 0.2s;\n}\n\nbutton:hover {\n    background-color: #357abD;\n} ",""]);const h=a},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},601:t=>{t.exports=function(t){return t[1]}},659:t=>{var e={};t.exports=function(t,i){var s=function(t){if(void 0===e[t]){var i=document.querySelector(t);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(i)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(i){!function(t,e,i){var s="";i.supports&&(s+="@supports (".concat(i.supports,") {")),i.media&&(s+="@media ".concat(i.media," {"));var o=void 0!==i.layer;o&&(s+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),s+=i.css,o&&(s+="}"),i.media&&(s+="}"),i.supports&&(s+="}");var n=i.sourceMap;n&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleTagTransform(s,t,e.options)}(e,t,i)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}}},e={};function i(s){var o=e[s];if(void 0!==o)return o.exports;var n=e[s]={id:s,exports:{}};return t[s](n,n.exports,i),n.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.nc=void 0;var s=i(72),o=i.n(s),n=i(825),a=i.n(n),h=i(659),r=i.n(h),l=i(56),d=i.n(l),c=i(540),p=i.n(c),g=i(113),u=i.n(g),m=i(365),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=r().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=p(),o()(m.A,f),m.A&&m.A.locals&&m.A.locals;class y{constructor(){this.waterColor="#0000CD",console.log("WaterGenerator initialized")}generateWaterTexture(t,e){const i=document.createElement("canvas");i.width=t,i.height=e;const s=i.getContext("2d");s.fillStyle=this.waterColor,s.fillRect(0,0,t,e);const o=s.getImageData(0,0,t,e),n=o.data,a=.2*e;for(let e=0;e<n.length;e+=4)if(Math.floor(e/4/t)<a){const t=40*(Math.random()-.5);n[e]=Math.max(0,Math.min(255,n[e]+t)),n[e+1]=Math.max(0,Math.min(255,n[e+1]+t)),n[e+2]=Math.max(0,Math.min(255,n[e+2]+t))}return s.putImageData(o,0,0),i}}class x{constructor(){this.earthTones=["#8B4513","#A0522D","#6B4423","#8B7355","#A9A9A9"],console.log("GroundGenerator initialized")}generateGroundTexture(t,e,i=0){const s=this.createCanvas(t,e),o=s.getContext("2d");this.fillBaseColor(o,t,e),this.addNoise(o,t,e);const n=this.generateTopEdge(t,i);return this.applyTopEdge(o,n,t,e),s}createCanvas(t,e){const i=document.createElement("canvas");return i.width=t,i.height=e,i}fillBaseColor(t,e,i){const s=this.earthTones[Math.floor(Math.random()*this.earthTones.length)];t.fillStyle=s,t.fillRect(0,0,e,i)}addNoise(t,e,i){const s=t.getImageData(0,0,e,i),o=s.data;for(let t=0;t<o.length;t+=4){const e=30*(Math.random()-.5);o[t]=Math.max(0,Math.min(255,o[t]+e)),o[t+1]=Math.max(0,Math.min(255,o[t+1]+e)),o[t+2]=Math.max(0,Math.min(255,o[t+2]+e))}t.putImageData(s,0,0)}generateTopEdge(t,e){const i=new Array(t);for(let s=0;s<t;s++){const t=5*Math.sin(.02*s)+3*Math.sin(.05*s),o=4*(Math.random()-.5);i[s]=e+t+o}return i}applyTopEdge(t,e,i,s){const o=t.getImageData(0,0,i,s),n=o.data;for(let t=0;t<i;t++){const o=Math.floor(e[t]);for(let e=o*i*4+4*t;e<s*i*4;e+=4*i)n[e+3]=255;for(let e=4*t;e<o*i*4+4*t;e+=4*i)n[e+3]=0}t.putImageData(o,0,0)}}class w{constructor(t={}){this.id=Math.random().toString(36).substring(2,15),this.position=t.position||{x:0,y:0},this.velocity=t.velocity||{x:0,y:0},this.size=t.size||{width:30,height:20},this.color=t.color||"#FFFFFF",this.type="entity"}update(t,e){this.position.x+=this.velocity.x*t,this.position.y+=this.velocity.y*t,this.checkBoundaries(e)}draw(t){t.fillStyle=this.color,t.fillRect(this.position.x-this.size.width/2,this.position.y-this.size.height/2,this.size.width,this.size.height)}checkBoundaries(t){this.position.x<this.size.width/2&&(this.position.x=this.size.width/2,this.velocity.x*=-1),this.position.x>t.width-this.size.width/2&&(this.position.x=t.width-this.size.width/2,this.velocity.x*=-1);const e=.2*t.height;this.position.y<e+this.size.height/2&&(this.position.y=e+this.size.height/2,this.velocity.y*=-1);const i=t.height-50;this.position.y>i-this.size.height/2&&(this.position.y=i-this.size.height/2,this.velocity.y*=-1)}collidesWith(t){const e=this.position.x-t.position.x,i=this.position.y-t.position.y;return Math.sqrt(e*e+i*i)<this.size.width/2+t.size.width/2}}class M extends w{constructor(t={}){super(t),this.type="rock",this.colors=t.colors||["#8B4513"],this.points=t.points||[],this.velocity={x:0,y:0},this.collisionHeight=.7*this.size.height}update(t,e){}draw(t){t.save(),t.translate(this.position.x,this.position.y),this.drawBody(t),t.restore()}drawBody(t){if(t.fillStyle=this.colors[0],t.beginPath(),this.points.length>0){t.moveTo(this.points[0].x,this.points[0].y);for(let e=1;e<this.points.length;e++)t.lineTo(this.points[e].x,this.points[e].y);t.closePath(),t.fill()}}checkCollision(t){if("fish"===t.type){const e=this.position.y-this.collisionHeight,i=this.position.y,s=this.position.x-this.size.width/2,o=this.position.x+this.size.width/2,n=t.position.y-t.size.height/2,a=t.position.y+t.size.height/2,h=t.position.x-t.size.width/2,r=t.position.x+t.size.width/2;return!(h>o||r<s||a<e||n>i)}return!1}}class b{constructor(t){this.canvas=t,this.ctx=t.getContext("2d"),this.width=t.width=1e3,this.height=t.height=700,this.entities={fish:[],plants:[],rocks:[]},this.frameCount=0,this.isRunning=!1,this.lastFrameTime=0,this.showGrid=!1,this.waterGenerator=new y,this.groundGenerator=new x,this.waterTexture=this.waterGenerator.generateWaterTexture(this.width,this.height),this.groundTexture=this.groundGenerator.generateGroundTexture(this.width,100),console.log(`Aquarium initialized with dimensions: ${this.width}x${this.height}`)}start(){this.isRunning||(this.isRunning=!0,this.lastFrameTime=performance.now(),console.log("Animation loop started"),requestAnimationFrame(this.update.bind(this)))}stop(){this.isRunning=!1,console.log("Animation loop stopped")}update(t){if(!this.isRunning)return;const e=(t-this.lastFrameTime)/1e3;this.lastFrameTime=t,this.ctx.clearRect(0,0,this.width,this.height),this.drawBackground(),this.updateEntities(e),this.frameCount%100==0&&console.log(`Frame: ${this.frameCount}, Entities: ${this.entities.fish.length} fish, ${this.entities.plants.length} plants`),this.frameCount++,requestAnimationFrame(this.update.bind(this))}drawBackground(){if(this.ctx.drawImage(this.waterTexture,0,0),this.ctx.drawImage(this.groundTexture,0,this.height-100),this.showGrid){this.ctx.strokeStyle="rgba(255, 255, 255, 0.2)",this.ctx.lineWidth=1;for(let t=0;t<=this.width;t+=100)this.ctx.beginPath(),this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.height),this.ctx.stroke(),t>0&&(this.ctx.fillStyle="white",this.ctx.font="12px Arial",this.ctx.fillText(t.toString(),t+5,15));for(let t=0;t<=this.height;t+=100)this.ctx.beginPath(),this.ctx.moveTo(0,t),this.ctx.lineTo(this.width,t),this.ctx.stroke(),t>0&&(this.ctx.fillStyle="white",this.ctx.font="12px Arial",this.ctx.fillText(t.toString(),5,t+15))}}updateEntities(t){for(const e of this.entities.rocks)e.update(t,this),e.draw(this.ctx);for(const e of this.entities.plants)e.update(t,this),e.draw(this.ctx);for(const e of this.entities.fish)e.update(t,this),e.draw(this.ctx)}addFish(t){return this.entities.fish.push(t),t}addPlant(t){this.entities.plants.push(t),console.log(`Added plant at position: ${t.position.x}, ${t.position.y}`)}addRock(t){this.entities.rocks.push(t),console.log(`Added rock at position: ${t.position.x}, ${t.position.y}`)}removeEntity(t){if("fish"===t.type){const e=this.entities.fish.indexOf(t);-1!==e&&this.entities.fish.splice(e,1)}else if("plant"===t.type){const e=this.entities.plants.indexOf(t);-1!==e&&this.entities.plants.splice(e,1)}else if("rock"===t.type){const e=this.entities.rocks.indexOf(t);-1!==e&&this.entities.rocks.splice(e,1)}}getEntities(){return{fish:[...this.entities.fish],plants:[...this.entities.plants],rocks:[...this.entities.rocks]}}getRandomPosition(){return{x:Math.random()*this.width,y:Math.random()*(this.height-70)}}toggleGrid(){return this.showGrid=!this.showGrid,this.showGrid}clearFish(){this.entities.fish=[],console.log("All fish cleared from aquarium")}}class v extends w{constructor(t={}){if(super(t),this.type="fish",this.baseShape=t.baseShape||"oval",this.colors=t.colors||["#FF6347"],this.appendages=t.appendages||{fins:[],tail:null,eyes:[]},this.patterns=t.patterns||[],this.behavior=t.behavior||"random",this.directionChangeTime=0,this.directionChangeInterval=2*Math.random()+1,this.speed=t.speed||50*Math.random()+20,this.facingRight=this.velocity.x>=0,this.growth=t.growth||0,this.maxSize=t.maxSize||{width:60,height:40},this.size=t.size||{width:30*Math.random()+40,height:20*Math.random()+30},!t.velocity){const t=Math.random()*Math.PI*2;this.velocity={x:Math.cos(t)*this.speed,y:Math.sin(t)*this.speed*.5}}console.log(`Fish created at position: ${this.position.x}, ${this.position.y} with size: ${this.size.width}x${this.size.height}`)}update(t,e){this.facingRight=this.velocity.x>=0,this.directionChangeTime+=t,this.directionChangeTime>=this.directionChangeInterval&&(this.changeDirection(),this.directionChangeTime=0,this.directionChangeInterval=2*Math.random()+1),super.update(t,e)}draw(t){t.save(),t.translate(this.position.x,this.position.y),t.fillStyle="red",t.beginPath(),t.arc(0,0,5,0,2*Math.PI),t.fill(),this.facingRight||t.scale(-1,1),this.drawBody(t),this.drawAppendages(t),this.drawPatterns(t),this.drawEyes(t),t.restore()}drawBody(t){switch(t.fillStyle=this.colors[0],this.baseShape){case"oval":default:t.beginPath(),t.ellipse(0,0,this.size.width/2,this.size.height/2,0,0,2*Math.PI),t.fill();break;case"rectangle":t.fillRect(-this.size.width/2,-this.size.height/2,this.size.width,this.size.height);break;case"triangle":t.beginPath(),t.moveTo(this.size.width/2,0),t.lineTo(-this.size.width/2,-this.size.height/2),t.lineTo(-this.size.width/2,this.size.height/2),t.closePath(),t.fill()}}drawAppendages(t){if(this.appendages.tail){const e=this.appendages.tail;t.fillStyle=e.color||this.colors[0],t.beginPath(),t.moveTo(-this.size.width/2,0),t.lineTo(-this.size.width/2-e.size.width,-e.size.height/2),t.lineTo(-this.size.width/2-e.size.width,e.size.height/2),t.closePath(),t.fill()}for(const e of this.appendages.fins)t.fillStyle=e.color||this.colors[0],t.beginPath(),t.moveTo(e.position.x,e.position.y),t.lineTo(e.position.x,e.position.y+e.size.height),t.lineTo(e.position.x-e.size.width,e.position.y+e.size.height/2),t.closePath(),t.fill()}drawEyes(t){for(const e of this.appendages.eyes)t.fillStyle=e.color||"#FFFFFF",t.beginPath(),t.arc(e.position.x,e.position.y,e.size,0,2*Math.PI),t.fill(),t.fillStyle="#000000",t.beginPath(),t.arc(e.position.x+.3*e.size,e.position.y,.4*e.size,0,2*Math.PI),t.fill()}drawPatterns(t){for(const e of this.patterns)switch(t.fillStyle=e.color||this.colors[1]||this.colors[0],e.type){case"spots":for(const i of e.spots)t.beginPath(),t.arc(i.x,i.y,i.size,0,2*Math.PI),t.fill();break;case"stripes":for(const i of e.stripes)t.fillRect(i.x-i.width/2,i.y-i.height/2,i.width,i.height)}}changeDirection(){const t=Math.random()*Math.PI*2;this.velocity={x:Math.cos(t)*this.speed,y:Math.sin(t)*this.speed*.5}}}class z{constructor(){this.predefinedPalettes=[["#FF6347","#4682B4","#FFD700","#32CD32","#9370DB"],["#8B4513","#556B2F","#B8860B","#A0522D","#CD853F"],["#00CED1","#20B2AA","#5F9EA0","#4682B4","#87CEEB"],["#FF69B4","#DA70D6","#BA55D3","#9370DB","#8A2BE2"]]}hslToRgb(t,e,i){let s,o,n;if(0===e)s=o=n=i;else{const a=(t,e,i)=>(i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+(e-t)*(2/3-i)*6:t),h=i<.5?i*(1+e):i+e-i*e,r=2*i-h;s=a(r,h,t+1/3),o=a(r,h,t),n=a(r,h,t-1/3)}return[Math.round(255*s),Math.round(255*o),Math.round(255*n)]}rgbToHex(t,e,i){return"#"+((1<<24)+(t<<16)+(e<<8)+i).toString(16).slice(1)}generatePalette(t,e,i={}){const s=[];if(Math.random()>.3)return[...this.predefinedPalettes[Math.floor(Math.random()*this.predefinedPalettes.length)]].sort((()=>.5-Math.random())).slice(0,e);const o=i.saturation||.7,n=i.lightness||.5,a=i.hueVariation||60;t=(t%=360)<0?t+360:t;for(let i=0;i<e;i++){let h=(t+(i*(a/e)-a/2))%360;h=h<0?h+360:h;const r=Math.min(1,Math.max(0,o+(.2*Math.random()-.1))),l=Math.min(1,Math.max(0,n+(.2*Math.random()-.1))),[d,c,p]=this.hslToRgb(h/360,r,l),g=this.rgbToHex(d,c,p);s.push(g)}return s}}class S{constructor(){this.baseShapes=["oval","rectangle","triangle"],this.colorUtils=new z,console.log("FishGenerator initialized")}generateRandomFish(t={}){const e={position:t.position||{x:700*Math.random()+150,y:500*Math.random()+100},size:t.size||{width:30*Math.random()+40,height:20*Math.random()+30},...t};return console.log(`Generating fish at position ${e.position.x}, ${e.position.y} with size ${e.size.width}x${e.size.height}`),e.baseShape||(e.baseShape=this.getRandomBaseShape()),e.colors||(e.colors=this.generateColors()),e.appendages||(e.appendages=this.generateAppendages(e)),e.patterns||(e.patterns=this.generatePatterns(e)),new v(e)}getRandomBaseShape(){return this.baseShapes[Math.floor(Math.random()*this.baseShapes.length)]}generateColors(){const t=Math.floor(3*Math.random())+2,e=360*Math.random();return this.colorUtils.generatePalette(e,t)}generateAppendages(t){const e={fins:[],tail:null,eyes:[]};e.tail={size:{width:t.size.width*(.3*Math.random()+.2),height:t.size.height*(.3*Math.random()+.6)},color:t.colors[Math.floor(Math.random()*t.colors.length)]};const i=Math.floor(3*Math.random())+1;for(let s=0;s<i;s++)e.fins.push({position:{x:(.6*Math.random()-.3)*t.size.width,y:(.6*Math.random()-.3)*t.size.height},size:{width:t.size.width*(.2*Math.random()+.1),height:t.size.height*(.3*Math.random()+.2)},color:t.colors[Math.floor(Math.random()*t.colors.length)]});const s=t.size.height*(.1*Math.random()+.08);e.eyes=[];const o=Math.random();let n;n=o<.01?0:o<.02?2:o<.03?3:1;for(let i=0;i<n;i++){let o,a;if(1===n)o=.3*t.size.width,a=.15*-t.size.height;else if(2===n)o=t.size.width*(.3+.1*(i-.5)),a=.15*-t.size.height;else if(3===n){const e=2*i*Math.PI/3;o=t.size.width*(.3+.1*Math.cos(e)),a=t.size.height*(.1*Math.sin(e)-.15)}e.eyes.push({position:{x:o,y:a},size:s,color:"#FFFFFF"})}return e}generatePatterns(t){const e=[];if(Math.random()>.5)if("spots"==(Math.random()>.5?"spots":"stripes")){const i=Math.floor(8*Math.random())+3,s=[];for(let e=0;e<i;e++){let e,i,o;do{e=(.8*Math.random()-.4)*t.size.width,i=(.8*Math.random()-.4)*t.size.height,o=3*Math.random()+2,this.isPointInFishBody(e,i,t)}while(!this.isPointInFishBody(e,i,t));s.push({x:e,y:i,size:o})}e.push({type:"spots",spots:s,color:t.colors[1]||t.colors[0]})}else{const i=Math.floor(4*Math.random())+2,s=[];for(let e=0;e<i;e++){let e,i,o,n;for(;;)if(e=(.4*Math.random()-.2)*t.size.width,i=(.8*Math.random()-.4)*t.size.height,o=t.size.width*(.4*Math.random()+.3),n=t.size.height*(.2*Math.random()+.1),[{x:e-o/2,y:i-n/2},{x:e+o/2,y:i-n/2},{x:e-o/2,y:i+n/2},{x:e+o/2,y:i+n/2}].every((e=>this.isPointInFishBody(e.x,e.y,t)))){s.push({x:e,y:i,width:o,height:n});break}}e.push({type:"stripes",stripes:s,color:t.colors[1]||t.colors[0]})}return e}isPointInFishBody(t,e,i){const s=i.size.width/2,o=i.size.height/2;switch(i.baseShape){case"oval":default:return t*t/(s*s)+e*e/(o*o)<=1;case"rectangle":return Math.abs(t)<=s&&Math.abs(e)<=o;case"triangle":const i=e>=-o,n=e<=o,a=Math.abs(t)<=s*(1-(e+o)/(2*o));return i&&n&&a}}}class F extends w{constructor(t={}){super(t),this.type="plant",this.baseShape=t.baseShape||"leaf",this.colors=t.colors||["#228B22"],this.segments=t.segments||[],this.branches=t.branches||[],this.velocity={x:0,y:0},this.growth=t.growth||0,this.growthRate=t.growthRate||.05,this.maxSegments=t.maxSegments||10,this.growthTimer=0,this.growthInterval=t.growthInterval||5,this.branchProbability=t.branchProbability||.3,this.position.y=t.position?.y||650,0===this.segments.length&&this.addSegment()}update(t,e){this.growthTimer+=t,this.growthTimer>=this.growthInterval&&this.segments.length<this.maxSegments&&(this.grow(),this.growthTimer=0);for(const t of this.segments)t.offset.x=2*Math.sin(.02*e.frameCount+.1*t.position.y);for(const t of this.branches)for(const i of t.segments)i.offset.x=2*Math.sin(.02*e.frameCount+.1*i.position.y+t.offset);super.update(t,e)}draw(t){for(let e=0;e<this.segments.length;e++){const i=this.segments[e];switch(t.save(),t.translate(this.position.x+i.position.x+i.offset.x,this.position.y-i.position.y),t.fillStyle=i.color||this.colors[0],this.baseShape){case"leaf":default:this.drawLeaf(t,i);break;case"round":this.drawRound(t,i);break;case"rectangular":this.drawRectangular(t,i)}t.restore()}for(const e of this.branches)for(const i of e.segments){switch(t.save(),t.translate(this.position.x+e.position.x+i.position.x+i.offset.x,this.position.y-e.position.y-i.position.y),t.rotate(e.angle),t.fillStyle=i.color||this.colors[0],this.baseShape){case"leaf":default:this.drawLeaf(t,i,.8);break;case"round":this.drawRound(t,i,.8);break;case"rectangular":this.drawRectangular(t,i,.8)}t.restore()}}drawLeaf(t,e,i=1){const s=e.size.width*i,o=e.size.height*i;t.beginPath(),t.moveTo(0,0),t.bezierCurveTo(.4*s,.5*-o,.8*s,.3*-o,0,-o),t.bezierCurveTo(.8*-s,.3*-o,.4*-s,.5*-o,0,0),t.fill()}drawRound(t,e,i=1){const s=e.size.width/2*i;t.beginPath(),t.arc(0,-e.size.height/2*i,s,0,2*Math.PI),t.fill()}drawRectangular(t,e,i=1){const s=e.size.width*i,o=e.size.height*i;t.fillRect(-s/2,-o,s,o)}grow(){this.addSegment(),this.growth++,Math.random()<this.branchProbability&&this.segments.length>2&&this.createBranch()}addSegment(){const t=this.segments[this.segments.length-1],e=10*Math.random()+20,i=10*Math.random()+15,s={position:{x:0,y:t?t.position.y+.7*e:0},offset:{x:0,y:0},size:{width:i,height:e},color:this.getSegmentColor(),rotation:.2*(Math.random()-.5)};return this.segments.push(s),s}createBranch(){const t=Math.floor(Math.random()*(this.segments.length-1)),e=this.segments[t],i={position:{x:e.position.x,y:e.position.y},segments:[],angle:Math.random()>.5?.2*Math.PI:.2*-Math.PI,offset:5*Math.random()},s=Math.floor(3*Math.random())+2;for(let t=0;t<s;t++){const e=8*Math.random()+15,s=8*Math.random()+10,o={position:{x:t>0?i.segments[t-1].position.x+.5*s:0,y:t>0?i.segments[t-1].position.y+.6*e:0},offset:{x:0,y:0},size:{width:s,height:e},color:this.getSegmentColor(),rotation:.2*(Math.random()-.5)};i.segments.push(o)}return this.branches.push(i),i}getSegmentColor(){if(this.colors.length>1)return this.colors[Math.floor(Math.random()*this.colors.length)];{const t=this.colors[0],e=parseInt(t.slice(1,3),16),i=parseInt(t.slice(3,5),16),s=parseInt(t.slice(5,7),16),o=Math.floor(30*(Math.random()-.5)),n=Math.max(0,Math.min(255,i+o));return`#${e.toString(16).padStart(2,"0")}${n.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}`}}}class T{constructor(){this.baseShapes=["leaf","round","rectangular"],this.colorUtils=new z}generateRandomPlant(t={}){const e={position:t.position||{x:700*Math.random()+150,y:650-20*Math.random()},size:t.size||{width:20*Math.random()+20,height:30*Math.random()+30},...t};return e.baseShape||(e.baseShape=this.getRandomBaseShape()),e.colors||(e.colors=this.generateColors()),e.segments||(e.segments=this.generateInitialSegments(e)),e.branches||(e.branches=[]),e.maxSegments=t.maxSegments||Math.floor(5*Math.random())+5,e.growthRate=t.growthRate||.05*Math.random()+.02,e.growthInterval=t.growthInterval||3*Math.random()+3,e.branchProbability=t.branchProbability||.3*Math.random()+.1,new F(e)}getRandomBaseShape(){return this.baseShapes[Math.floor(Math.random()*this.baseShapes.length)]}generateColors(){const t=Math.floor(2*Math.random())+1,e=90+60*Math.random();return this.colorUtils.generatePalette(e,t,{saturation:.5+.5*Math.random(),lightness:.3+.3*Math.random()})}generateInitialSegments(t){const e=[],i=Math.floor(3*Math.random())+1;for(let s=0;s<i;s++){const i=10*Math.random()+20,o=10*Math.random()+15;e.push({position:{x:0,y:s>0?e[s-1].position.y+.7*i:0},offset:{x:0,y:0},size:{width:o,height:i},color:t.colors[Math.floor(Math.random()*t.colors.length)],rotation:.2*(Math.random()-.5)})}return e}}class P{constructor(){this.colorUtils=new z,this.earthTones=["#8B4513","#A0522D","#6B4423","#8B7355","#A9A9A9","#808080","#696969","#4A4A4A"],console.log("RockGenerator initialized")}generateRandomRock(t={}){const e=Math.random()<.3,i=Math.random()<.2,s={position:t.position||{x:800*Math.random()+100,y:650+30*Math.random()},size:t.size||this.generateRockSize(e,i),...t};return s.colors||(s.colors=this.generateColors()),s.points||(s.points=this.generatePoints(s)),new M(s)}generateRockSize(t,e){return e?{width:100*Math.random()+80,height:60*Math.random()+40}:t?{width:60*Math.random()+50,height:40*Math.random()+30}:{width:40*Math.random()+30,height:30*Math.random()+20}}generateColors(){const t=Math.floor(2*Math.random())+2,e=[];e.push(this.earthTones[Math.floor(Math.random()*this.earthTones.length)]);for(let i=1;i<t;i++){let t;do{t=this.earthTones[Math.floor(Math.random()*this.earthTones.length)]}while(e.includes(t));e.push(t)}return e}generatePoints(t){const e=[],i=Math.floor(4*Math.random())+(t.size.width>100?8:6),s=t.size.width/2,o=t.size.height/2;for(let t=0;t<i;t++){const n=t/i*Math.PI*2,a=s*(.7+.6*Math.random()),h=o*(.7+.6*Math.random());e.push({x:0+Math.cos(n)*a,y:0+Math.sin(n)*h})}return e}}class C{constructor(t,e,i){this.aquarium=t,this.fishGenerator=e,this.plantGenerator=i,this.feedBtn=document.getElementById("feed-btn"),this.spawnFishBtn=document.getElementById("spawn-fish-btn"),this.spawnPlantBtn=document.getElementById("spawn-plant-btn"),this.exportBtn=document.getElementById("export-btn"),this.importBtn=document.getElementById("import-btn"),this.toggleGridBtn=document.getElementById("toggle-grid-btn"),this.feedBtn.addEventListener("click",(()=>this.handleFeed())),this.spawnFishBtn.addEventListener("click",(()=>this.handleSpawnFish())),this.spawnPlantBtn.addEventListener("click",(()=>this.handleSpawnPlant())),this.exportBtn.addEventListener("click",(()=>this.handleExport())),this.importBtn.addEventListener("click",(()=>this.handleImport())),this.toggleGridBtn.addEventListener("click",(()=>this.handleToggleGrid())),this.createClearFishButton(),console.log("UIController initialized")}createClearFishButton(){const t=document.createElement("button");t.id="clear-fish-btn",t.textContent="Clear Fish",t.addEventListener("click",(()=>this.handleClearFish())),document.querySelector(".controls").appendChild(t)}handleClearFish(){this.aquarium.clearFish()}handleFeed(){const t=Math.floor(5*Math.random())+5;for(let e=0;e<t;e++)setTimeout((()=>{const t=Math.random()*this.aquarium.width;this.createFoodParticle(t,20)}),100*e)}createFoodParticle(t,e){this.aquarium.ctx,Math.random();let i=e;const s=setInterval((()=>{this.aquarium.isRunning?(Math.random(),i+=1,i>this.aquarium.height-50&&clearInterval(s)):clearInterval(s)}),50)}handleSpawnFish(){const t=this.fishGenerator.generateRandomFish();this.aquarium.addFish(t)}handleSpawnPlant(){const t=Math.random()*(this.aquarium.width-200)+100,e=this.plantGenerator.generateRandomPlant({position:{x:t,y:650}});this.aquarium.addPlant(e)}handleExport(){const t={fish:this.aquarium.entities.fish.map((t=>({baseShape:t.baseShape,colors:t.colors,appendages:t.appendages,patterns:t.patterns,size:t.size}))),plants:this.aquarium.entities.plants.map((t=>({baseShape:t.baseShape,colors:t.colors,segments:t.segments,position:{x:t.position.x,y:t.position.y}})))},e="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(t,null,2)),i=document.createElement("a");i.setAttribute("href",e),i.setAttribute("download","aquarium_export.json"),document.body.appendChild(i),i.click(),i.remove()}handleImport(){const t=document.createElement("input");t.type="file",t.accept=".json",t.style.display="none",document.body.appendChild(t),t.addEventListener("change",(e=>{const i=e.target.files[0];if(!i)return;const s=new FileReader;s.onload=t=>{try{const e=JSON.parse(t.target.result);this.importAquariumData(e)}catch(t){console.error("Error importing aquarium data:",t),alert("Failed to import aquarium data. Invalid format.")}},s.readAsText(i),t.remove()})),t.click()}importAquariumData(t){this.aquarium.entities.fish=[],this.aquarium.entities.plants=[],t.fish&&Array.isArray(t.fish)&&t.fish.forEach((t=>{const e=this.fishGenerator.generateRandomFish(t);this.aquarium.addFish(e)})),t.plants&&Array.isArray(t.plants)&&t.plants.forEach((t=>{const e=this.plantGenerator.generateRandomPlant(t);this.aquarium.addPlant(e)}))}handleCanvasClick(t){const e=this.aquarium.canvas.getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top,o=[...this.aquarium.entities.fish,...this.aquarium.entities.plants];for(const t of o){const e=t.position.x-i,o=t.position.y-s;if(Math.sqrt(e*e+o*o)<t.size.width/2){"fish"===t.type&&t.changeDirection();break}}}handleToggleGrid(){const t=this.aquarium.toggleGrid(),e=document.getElementById("toggle-grid-btn");e&&(e.textContent=t?"Hide Grid":"Show Grid")}}document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM loaded, initializing aquarium");const t=document.getElementById("aquarium-canvas");if(!t)return void console.error("Canvas element not found!");console.log("Canvas found:",t);const e=new b(t),i=new S,s=new T,o=new P;new C(e,i,s),e.start(),console.log("Creating initial fish and plants...");for(let t=0;t<12;t++){const s=i.generateRandomFish();e.addFish(s),console.log(`Fish ${t+1} created:`,s)}for(let t=0;t<5;t++){const t=s.generateRandomPlant();e.addPlant(t)}for(let t=0;t<8;t++){const t=o.generateRandomRock();e.addRock(t)}console.log("Total entities:",e.entities.fish.length,"fish,",e.entities.plants.length,"plants")}))})();